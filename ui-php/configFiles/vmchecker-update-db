#!/usr/bin/env python

"""Script to manually update the db storring info from the repo"""

import optparse

from vmchecker import update_db
from vmchecker import repo_walker
from vmchecker import vmlogging



def add_update_db_optparse(cmdline):
    """Adds vmchecker-update-db speciffic options to an already
    populated family of options.
    """
    group = optparse.OptionGroup(cmdline, 'vmchecker-update-db')
    group.add_option('-i', '--ignore-timestamp', action='store_true', dest='ignore_timestamp',
                     default=False, help='Update all grades ignoring result file modification time.')
    cmdline.add_option_group(group)


def main():
    """Checks for modified grades and updates the database"""

    vmlogging.create_script_stdout_logger()
    # parse and check command line arguments
    cmdline = optparse.OptionParser()
    repo_walker.add_optparse_group(cmdline)
    add_update_db_optparse(cmdline)
    (options, _) = cmdline.parse_args()
    repo_walker.check_arguments(cmdline, options)


    update_db.update_grades(options.course_id, options.user, options.assignment,
                            options.ignore_timestamp, options.simulate)





if __name__ == '__main__':
    main()

